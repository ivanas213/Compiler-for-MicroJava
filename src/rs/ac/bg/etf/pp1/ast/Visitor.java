// generated with ast extension for cup
// version 0.8
// 14/8/2023 14:9:47


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(NumConst NumConst);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(NewType NewType);
    public void visit(ExprList ExprList);
    public void visit(FormParameters FormParameters);
    public void visit(Relop Relop);
    public void visit(DeclList DeclList);
    public void visit(CondFactList CondFactList);
    public void visit(FindAnyRightDesignator FindAnyRightDesignator);
    public void visit(Wide Wide);
    public void visit(Else Else);
    public void visit(MulopFactorList MulopFactorList);
    public void visit(AddopTermList AddopTermList);
    public void visit(VarDecl VarDecl);
    public void visit(LocalVarDeclList LocalVarDeclList);
    public void visit(DesignatorOrNo DesignatorOrNo);
    public void visit(BoolConst BoolConst);
    public void visit(LocalVarDecl LocalVarDecl);
    public void visit(DesignatorList DesignatorList);
    public void visit(Const Const);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(IdentList IdentList);
    public void visit(ConstructorDeclList ConstructorDeclList);
    public void visit(CondTermList CondTermList);
    public void visit(IdentOrExpr IdentOrExpr);
    public void visit(Func Func);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MethodType MethodType);
    public void visit(IdentOrExprList IdentOrExprList);
    public void visit(Extends Extends);
    public void visit(Brack Brack);
    public void visit(TypeIdentBracks TypeIdentBracks);
    public void visit(ActPars ActPars);
    public void visit(Designator Designator);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(TypeIdentList TypeIdentList);
    public void visit(IdentValList IdentValList);
    public void visit(Decl Decl);
    public void visit(FindAnyLeftDesignator FindAnyLeftDesignator);
    public void visit(CharConst CharConst);
    public void visit(MulopPercent MulopPercent);
    public void visit(MulopDiv MulopDiv);
    public void visit(MulopMul MulopMul);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(RelopLTE RelopLTE);
    public void visit(RelopLT RelopLT);
    public void visit(RelopGTE RelopGTE);
    public void visit(RelopGT RelopGT);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEqual RelopEqual);
    public void visit(AssignOp AssignOp);
    public void visit(Label Label);
    public void visit(IdentOrExprExpr IdentOrExprExpr);
    public void visit(IdentOrExprIdent IdentOrExprIdent);
    public void visit(NoIdentOrExprList NoIdentOrExprList);
    public void visit(IdentOrExprL IdentOrExprL);
    public void visit(NoFunc NoFunc);
    public void visit(FuncArg FuncArg);
    public void visit(FuncParen FuncParen);
    public void visit(NewTypeActPars NewTypeActPars);
    public void visit(NewTypeNoActPars NewTypeNoActPars);
    public void visit(NewTypeExpr NewTypeExpr);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNew FactorNew);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorDesignator FactorDesignator);
    public void visit(MulopFactor MulopFactor);
    public void visit(OneMulopFactor OneMulopFactor);
    public void visit(MulopFactL MulopFactL);
    public void visit(Term Term);
    public void visit(AddopTerm AddopTerm);
    public void visit(OneNegativeAddopTerm OneNegativeAddopTerm);
    public void visit(OneAddopTerm OneAddopTerm);
    public void visit(AddopTerminalList AddopTerminalList);
    public void visit(Expr Expr);
    public void visit(CondFactRelop CondFactRelop);
    public void visit(CondFactNoRelop CondFactNoRelop);
    public void visit(OneConditionFact OneConditionFact);
    public void visit(ConditionFactList ConditionFactList);
    public void visit(CondTerm CondTerm);
    public void visit(OneCondTerm OneCondTerm);
    public void visit(ConditionTermList ConditionTermList);
    public void visit(Condition Condition);
    public void visit(OneExpr OneExpr);
    public void visit(ExpressionList ExpressionList);
    public void visit(DesignatorNo DesignatorNo);
    public void visit(DesignatorYes DesignatorYes);
    public void visit(OneDesignator OneDesignator);
    public void visit(DesignList DesignList);
    public void visit(DesignatorExpr DesignatorExpr);
    public void visit(DesignatorAssignNotEmpty DesignatorAssignNotEmpty);
    public void visit(DesignatorAssignEmpty DesignatorAssignEmpty);
    public void visit(DesignatorDec DesignatorDec);
    public void visit(DesignatorInc DesignatorInc);
    public void visit(DesignatorPars DesignatorPars);
    public void visit(DesignatorNoPars DesignatorNoPars);
    public void visit(DesignatorExpress DesignatorExpress);
    public void visit(NoElse NoElse);
    public void visit(ElseStm ElseStm);
    public void visit(NoWide NoWide);
    public void visit(YesWide YesWide);
    public void visit(ForEachStatment ForEachStatment);
    public void visit(FindAndReplaceStatement FindAndReplaceStatement);
    public void visit(StatementListStatement StatementListStatement);
    public void visit(PrintNumConstStatement PrintNumConstStatement);
    public void visit(FindAnyStatement FindAnyStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnExprStatement ReturnExprStatement);
    public void visit(ReturnStatement ReturnStatement);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(WhileStatement WhileStatement);
    public void visit(IfElseStatement IfElseStatement);
    public void visit(ErrorStatement ErrorStatement);
    public void visit(DesignatorStatementStatement DesignatorStatementStatement);
    public void visit(Type Type);
    public void visit(WithoutBracks WithoutBracks);
    public void visit(WithBracks WithBracks);
    public void visit(IdentFormPars IdentFormPars);
    public void visit(TypeFormPars TypeFormPars);
    public void visit(TypeIdent TypeIdent);
    public void visit(OneTypeIdent OneTypeIdent);
    public void visit(TypeIdentificatorList TypeIdentificatorList);
    public void visit(FormPars FormPars);
    public void visit(NoStatementList NoStatementList);
    public void visit(StmList StmList);
    public void visit(NoFormPars NoFormPars);
    public void visit(FormParams FormParams);
    public void visit(MethodVoid MethodVoid);
    public void visit(MethodNoVoid MethodNoVoid);
    public void visit(MethodName MethodName);
    public void visit(IdentListLocal IdentListLocal);
    public void visit(VarTypeLocal VarTypeLocal);
    public void visit(MethodDecl MethodDecl);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(ConstructorMethodDeclList ConstructorMethodDeclList);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarationList VarDeclarationList);
    public void visit(NoExtendClass NoExtendClass);
    public void visit(ExtendClass ExtendClass);
    public void visit(ClassDecl ClassDecl);
    public void visit(NoBrackets NoBrackets);
    public void visit(Brackets Brackets);
    public void visit(Ident Ident);
    public void visit(OneIdent OneIdent);
    public void visit(IdentificatorList IdentificatorList);
    public void visit(VarType VarType);
    public void visit(ErrorVarDecl ErrorVarDecl);
    public void visit(VarDeclar VarDeclar);
    public void visit(BoolConstant BoolConstant);
    public void visit(CharConstant CharConstant);
    public void visit(NumConstant NumConstant);
    public void visit(IdentVal IdentVal);
    public void visit(OneIdentVal OneIdentVal);
    public void visit(ErrorIdentVal ErrorIdentVal);
    public void visit(IdentValueList IdentValueList);
    public void visit(ConstType ConstType);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarationList MethodDeclarationList);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclatation ConstDeclatation);
    public void visit(NoDeclarations NoDeclarations);
    public void visit(DeclarationList DeclarationList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
